Database Name: institution.db
Tables Overview
***student_details***
Columns:
* id: TEXT, PRIMARY KEY
* name: TEXT, NOT NULL
* dob: DATE, NOT NULL
* department_id: TEXT, NOT NULL
* class: TEXT, NOT NULL
* quiz1, quiz2, quiz3: FLOAT
* assignment1, assignment2: FLOAT
* internal1, internal2, internal3: FLOAT
***staff_details***
Columns:
* id: TEXT, PRIMARY KEY
* name: TEXT, NOT NULL
* designation: TEXT, NOT NULL
* department_id: TEXT, NOT NULL
* password: TEXT, NOT NULL, DEFAULT pass_staff
* mfa: BOOLEAN, DEFAULT 0
* secd: TEXT, DEFAULT NONE
* phone_no: INTEGER, NOT NULL
* email: TEXT, NOT NULL, UNIQUE


***department_details***
Columns:
* id: TEXT, PRIMARY KEY
* name: TEXT, NOT NULL
* grad_level: TEXT, NOT NULL
* phone: TEXT, NOT NULL


***admin_details***
Columns:
* id: TEXT, PRIMARY KEY
* password: TEXT, NOT NULL, DEFAULT pass_admin
* mfa: BOOLEAN, DEFAULT 0
* secd: TEXT, DEFAULT NONE


***feedback***
Columns:
* id: INTEGER, PRIMARY KEY, AUTOINCREMENT
* user_id: INTEGER, NOT NULL
* name: TEXT, NOT NULL
* message: TEXT, NOT NULL


***subject***
Columns:
* id: TEXT, PRIMARY KEY
* department_id: INTEGER, NOT NULL
* name: TEXT, NOT NULL


***timetable***
Columns:
* id: INTEGER, PRIMARY KEY, AUTOINCREMENT
* day: TEXT, NOT NULL
* time: TEXT, NOT NULL
* subject: TEXT, NOT NULL
* class: TEXT, NOT NULL
* department_id: INTEGER, NOT NULL


Relationships Summary
1. student_details ↔ department_details: Each student belongs to a department.
2. staff_details ↔ department_details: Staff members are assigned to departments.
3. subject ↔ department_details: Subjects are linked to departments.
4. timetable ↔ department_details: Timetables are specific to departments and classes.






Example queries:




1. **Query:** "What are my marks for quizzes and assignments?"
   - **SQL Command:**
     ```
     SELECT quiz1, quiz2, quiz3, assignment1, assignment2 
     FROM student_details 
     WHERE id = 'student_id';
     ```


2. **Query:** "What is my total internal mark?"
   - **SQL Command:**
     ```
     SELECT (internal1 + internal2 + internal3) AS total_internal 
     FROM student_details 
     WHERE id = 'student_id';
     ```


3. **Query:** "Which subjects are offered in my department?"
   - **SQL Command:**
     ```
     SELECT name 
     FROM subject 
     WHERE department_id = (SELECT department_id FROM student_details WHERE id = 'student_id');
     ```


4. **Query:** "What is my timetable for today?"
   - **SQL Command:**
     ```
     SELECT time, subject 
     FROM timetable 
     WHERE day = 'current_day' AND class = (SELECT class FROM student_details WHERE id = 'student_id');
     ```


5. **Query:** "What is my department name?"
   - **SQL Command:**
     ```
     SELECT name 
     FROM department_details 
     WHERE id = (SELECT department_id FROM student_details WHERE id = 'student_id');
     ```


6. **Query:** "What is my class?"
   - **SQL Command:**
     ```
     SELECT class 
     FROM student_details 
     WHERE id = 'student_id';
     ```


7. **Query:** "What feedback have I provided?"
   - **SQL Command:**
     ```
     SELECT message 
     FROM feedback 
     WHERE user_id = 'student_id';
     ```


8. **Query:** "What are my marks for all evaluations in the subject 'Mathematics'?"
   - **SQL Command:**
     ```
     SELECT quiz1, quiz2, quiz3, assignment1, assignment2, internal1, internal2, internal3 
     FROM student_details 
     WHERE id = 'student_id' AND class = 'Mathematics';
     ```


9. **Query:** "How can I improve my scores in assignments?"
   - **SQL Command:**
     ```
     SELECT name, message 
     FROM feedback 
     WHERE user_id = 'student_id' AND name LIKE '%assignment%';
     ```


10. **Query:** "What is my date of birth?"
    - **SQL Command:**
      ```
      SELECT dob 
      FROM student_details 
      WHERE id = 'student_id';
      ```




Ends with a semicolon (;): Ensure no prompt is incomplete or lacks a semicolon at the end.
No extra info or identifiers: Avoid any prefix (e.g., sql''') or suffix explanations.
Query-specific accuracy: Match the query intent to the role's allowed database access.


This query ensures:
Proper Formatting: The query ends with a semicolon (;) and does not include any extra syntax or comments.
Role-Specific Compliance: It aligns with the defined access control rules, avoiding restricted fields like other users' details or phone numbers.


Key Points for the Prompt:
Clarity in Input: Use role-based phrasing like "as a student, I want to view my details."
No Additional SQL Tags: Avoid prefixes (sql) or ambiguous characters.