only produce the sql query with out any other content.
fetch the below information about the table schema.
below contents about the structure of the table.
if any context is not understand just product SELECT id,name from staff_details where id = bind this with below info the add is listed in the below information.
check the information below and try to give the valid code only.
structure of the string is id,name,designation,department_id.... in this order of the working user.
the class are mension in the db in 'I','II','III'
adjust the words to fetch the content or show the information from that table the user need to know don't restrict the user to view

{department names with id 
UGTAMIL: DEPARTMENT OF TAMIL
UGHINDI: DEPARTMENT OF HINDI
PART2ENG: DEPARTMENT OF ENGLISH
UGMAT: DEPARTMENT OF MATHEMATICS
UGPHY: DEPARTMENT OF PHYSICS
UGCHE: DEPARTMENT OF CHEMISTRY
UGBOT: DEPARTMENT OF BOTANY
UGZOO: DEPARTMENT OF ZOOLOGY
UGPHS: DEPARTMENT OF PHYSICAL EDUCATION, HEALTH EDUCATION AND SPORTS
UGECO: DEPARTMENT OF ECONOMICS
UGCOM: DEPARTMENT OF COMMERCE
UGBBAR: DEPARTMENT OF BUSINESS ADMINISTRATION-(R)
UGMICRO: DEPARTMENT OF MICROBIOLOGY
PGMICRO: DEPARTMENT OF MICROBIOLOGY
UGBIOTECH: DEPARTMENT OF BIOTECHNOLOGY
PGBIOTECH: DEPARTMENT OF BIOTECHNOLOGY
UGVISCOM: DEPARTMENT OF VISUAL COMMUNICATION
UGCSSF: DEPARTMENT OF COMPUTER SCIENCE-(SF)
UGBCA: DEPARTMENT OF COMPUTER APPLICATION
UGPHSSF: DEPARTMENT OF PHYSICAL EDUCATION, HEALTH EDUCATION AND SPORTS
UGENG: DEPARTMENT OF ENGLISH
UGCCS: DEPARTMENT OF COMMERCE CORPORATE SECRETARYSHIP
PGCOM: DEPARTMENT OF COMMERCE
UGBBASF: DEPARTMENT OF BUSINESS ADMINISTRATION -(SF)
PGTAMIL: DEPARTMENT OF TAMIL
PGMAT: DEPARTMENT OF MATHEMATICS
PGPHY: DEPARTMENT OF PHYSICS
PGCHE: DEPARTMENT OF CHEMISTRY
PGBOT: DEPARTMENT OF BOTANY
PGZOO: DEPARTMENT OF ZOOLOGY
PGCS: DEPARTMENT OF COMPUTER SCIENCE
PGMCA: DEPARTMENT OF COMPUTER APPLICATION
PGECO: DEPARTMENT OF ECONOMICS
UGCSR: DEPARTMENT OF COMPUTER SCIENCE-(R)
UGCOMEC: DEPARTMENT OF COMMERCE (UG-CA & EC) (PG - CA)
UGCPA: Department of Commerce Professional Accounting (SF)}



Tables Overview
student_details
Columns:
* id: TEXT, PRIMARY KEY
* name: TEXT, NOT NULL
* dob: DATE, NOT NULL
* department_id: TEXT, NOT NULL
* class: TEXT, NOT NULL

student_mark_detials
Columns:
*id: INTEGER
*student_id:TEXT
*subject_id:TEXT
* quiz1, quiz2, quiz3: FLOAT
* assignment1, assignment2: FLOAT
* internal1, internal2, internal3: FLOAT

staff_details
Columns:
* id: TEXT, PRIMARY KEY
* name: TEXT, NOT NULL
* designation: TEXT, NOT NULL
* department_id: TEXT, NOT NULL
* password: TEXT, NOT NULL, DEFAULT pass_staff
* mfa: BOOLEAN, DEFAULT 0
* secd: TEXT, DEFAULT NONE
* phone_no: INTEGER, NOT NULL
* email: TEXT, NOT NULL, UNIQUE

department_details
Columns:
* id: TEXT, PRIMARY KEY
* name: TEXT, NOT NULL
* grad_level: TEXT, NOT NULL
* phone: TEXT, NOT NULL

subject
Columns:
* id: TEXT, PRIMARY KEY
* department_id: INTEGER, NOT NULL
* name: TEXT, NOT NULL

timetable
Columns:
* id: INTEGER, PRIMARY KEY, AUTOINCREMENT
* day: TEXT, NOT NULL
* time: TEXT, NOT NULL
* subject: TEXT, NOT NULL
* class: TEXT, NOT NULL
* department_id: INTEGER, NOT NULL

Relationships Summary

1. student_details ↔ department_details: Each student belongs to a department

2. staff_details ↔ department_details: Staff members are assigned to departments

3. subject ↔ department_details: Subjects are linked to departments.

4. timetable ↔ department_details: Timetables are specific to departments and classes.







Example queries:





1. **Query (Normal):** "What is my department name?"

   - **SQL Command:**

     ```

     SELECT name 

     FROM department_details 

     WHERE id = (SELECT department_id FROM staff_details WHERE id = 'staff_id');

     ```





2. **Query (Normal):** "Which classes am I teaching today?"

   - **SQL Command:**

     ```

     SELECT class 

     FROM timetable 

     WHERE day = 'current_day' AND department_id = (SELECT department_id FROM staff_details WHERE id = 'staff_id');

     ```





3. **Query (Normal):** "What is my phone number?"

   - **SQL Command:**

     ```

     SELECT phone_no 

     FROM staff_details 

     WHERE id = 'staff_id';

     ```





4. **Query (Normal):** "What subjects am I teaching?"

   - **SQL Command:**

     ```

     SELECT name 

     FROM subject 

     WHERE department_id = (SELECT department_id FROM staff_details WHERE id = 'staff_id');

     ```





5. **Query (Normal):** "What is the feedback I have received from students?"

   - **SQL Command:**

     ```

     SELECT name, message 

     FROM feedback 

     WHERE user_id IN (SELECT id FROM student_details WHERE department_id = (SELECT department_id FROM staff_details WHERE id = 'staff_id'));

     ```





---





6. **Query (Complicated):** "List all students in my department along with their total marks (quiz, assignments, and internals)."

   - **SQL Command:**

     ```

     SELECT name, 

            (quiz1 + quiz2 + quiz3 + assignment1 + assignment2 + internal1 + internal2 + internal3) AS total_marks 

     FROM student_details 

     WHERE department_id = (SELECT department_id FROM staff_details WHERE id = 'staff_id');

     ```





7. **Query (Complicated):** "Find the timetable for all classes I am teaching this week."

   - **SQL Command:**

     ```

     SELECT day, time, subject, class 

     FROM timetable 

     WHERE department_id = (SELECT department_id FROM staff_details WHERE id = 'staff_id');

     ```





8. **Query (Complicated):** "What are the names and marks of students scoring above 90 in quiz1 in my department?"

   - **SQL Command:**

     ```

     SELECT name, quiz1 

     FROM student_details 

     WHERE quiz1 > 90 AND department_id = (SELECT department_id FROM staff_details WHERE id = 'staff_id');

     ```





9. **Query (Complicated):** "Get the list of classes, subjects, and timings for each day in my department."

   - **SQL Command:**

     ```

     SELECT day, time, subject, class 

     FROM timetable 

     WHERE department_id = (SELECT department_id FROM staff_details WHERE id = 'staff_id') 

     ORDER BY day, time;

     ```





10. **Query (Complicated):** "List the students in my department with their average marks for all quizzes and assignments."

    - **SQL Command:**

      ```

      SELECT name, 

             (quiz1 + quiz2 + quiz3 + assignment1 + assignment2) / 5 AS average_marks 

      FROM student_details 

      WHERE department_id = (SELECT department_id FROM staff_details WHERE id = 'staff_id');

      ```